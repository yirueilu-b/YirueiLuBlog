{"version":3,"sources":["components/Navbar.js","components/ArticleCard.js","components/ArticleList.js","App.js","serviceWorker.js","index.js"],"names":["appBarStyle","makeStyles","theme","root","iconButton1","marginLeft","iconButton2","spacing","backToTopStyles","position","bottom","right","HideOnScroll","props","children","window","trigger","useScrollTrigger","target","undefined","Slide","appear","direction","in","ScrollTop","disableHysteresis","threshold","classes","Zoom","onClick","event","anchor","ownerDocument","document","querySelector","scrollIntoView","behavior","block","role","className","BackToTop","Fragment","CssBaseline","AppBar","color","Toolbar","Typography","variant","Tooltip","title","IconButton","edge","aria-label","onToggleDark","palette","type","id","Fab","size","useStyles","height","display","backgroundColor","background","default","card_image","width","card_info","flexDirection","borderBottom","borderBottomColor","divider","card_title","flex","textAlign","card_detail","textJustify","VerticalAlign","MediaControlCard","Card","elevation","square","Hidden","mdDown","CardMedia","image","CardContent","marginTop","marginBottom","card_grid","Articles","i","push","Grid","item","xs","md","key","Container","container","alignItems","justify","myTheme","unstable_createMuiStrictModeTheme","typography","fontFamily","join","App","toggleDarkTheme","newPaletteType","state","setState","bind","this","React","Component","withStyles","flexGrow","maxWidth","minHeight","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.fcd0b429.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Brightness7Icon from '@material-ui/icons/Brightness7';\r\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst Title = \"Blog\";\r\n\r\nconst appBarStyle = makeStyles((theme) => ({\r\n    root: {},\r\n    iconButton1: {\r\n        marginLeft: 'auto'\r\n    },\r\n    iconButton2: {\r\n        marginLeft: theme.spacing(0)\r\n    },\r\n}));\r\n\r\nconst backToTopStyles = makeStyles((theme) => ({\r\n    root: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nfunction HideOnScroll(props) {\r\n    const {children, window} = props;\r\n    // Note that you normally won't need to set the window ref as useScrollTrigger\r\n    // will default to window.\r\n    // This is only being set here because the demo is in an iframe.\r\n    const trigger = useScrollTrigger({target: window ? window() : undefined});\r\n\r\n    return (\r\n        <Slide appear={false} direction=\"down\" in={!trigger}>\r\n            {children}\r\n        </Slide>\r\n    );\r\n}\r\n\r\nHideOnScroll.propTypes = {\r\n    children: PropTypes.element.isRequired,\r\n    /**\r\n     * Injected by the documentation to work in an iframe.\r\n     * You won't need it on your project.\r\n     */\r\n    window: PropTypes.func,\r\n};\r\n\r\nfunction ScrollTop(props) {\r\n    const {children, window} = props;\r\n    // Note that you normally won't need to set the window ref as useScrollTrigger\r\n    // will default to window.\r\n    // This is only being set here because the demo is in an iframe.\r\n    const trigger = useScrollTrigger({\r\n        target: window ? window() : undefined,\r\n        disableHysteresis: true,\r\n        threshold: 100,\r\n    });\r\n    const classes = backToTopStyles();\r\n\r\n    const handleClick = (event) => {\r\n        const anchor = (event.target.ownerDocument || document).querySelector('#back-to-top-anchor');\r\n\r\n        if (anchor) {\r\n            anchor.scrollIntoView({behavior: 'smooth', block: 'end'});\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Zoom in={trigger}>\r\n            <div onClick={handleClick} role=\"presentation\" className={classes.root}>\r\n                {children}\r\n            </div>\r\n        </Zoom>\r\n    );\r\n}\r\n\r\nScrollTop.propTypes = {\r\n    children: PropTypes.element.isRequired,\r\n    /**\r\n     * Injected by the documentation to work in an iframe.\r\n     * You won't need it on your project.\r\n     */\r\n    window: PropTypes.func,\r\n};\r\n\r\nexport default function BackToTop(props) {\r\n    const classes = appBarStyle();\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline/>\r\n            <HideOnScroll {...props}>\r\n                <AppBar className={classes.root} color=\"default\">\r\n                    <Toolbar>\r\n                        <Typography variant=\"h6\">{Title}</Typography>\r\n                        <Tooltip title=\"切換佈景主題\">\r\n                            <IconButton className={classes.iconButton1} edge=\"end\" color=\"default\"\r\n                                        aria-label=\"切換佈景主題\" onClick={props.onToggleDark}>\r\n                                {props.theme.palette.type === \"light\" ? <Brightness7Icon/> : <Brightness4Icon/>}\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </HideOnScroll>\r\n            <Toolbar id=\"back-to-top-anchor\"/>\r\n            <ScrollTop {...props}>\r\n                <Fab color=\"secondary\" size=\"small\" aria-label=\"scroll back to top\">\r\n                    <KeyboardArrowUpIcon/>\r\n                </Fab>\r\n            </ScrollTop>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    card_image: {\r\n        width: '40%',\r\n    },\r\n    card_info: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        borderBottom: '1px solid',\r\n        borderBottomColor: theme.palette.divider,\r\n        width: '100%',\r\n    },\r\n    card_title: {\r\n        flex: '1 0 auto',\r\n        textAlign: 'left',\r\n    },\r\n    card_detail: {\r\n        flex: '1 0 auto',\r\n        textAlign: 'right',\r\n        textJustify: 'bottom',\r\n        VerticalAlign: 'text-bottom',\r\n    },\r\n}));\r\n\r\nexport default function MediaControlCard() {\r\n    const classes = useStyles();\r\n    return (\r\n        <Card className={classes.root} elevation={0} square={true}>\r\n            <Hidden mdDown>\r\n                <CardMedia\r\n                    className={classes.card_image}\r\n                    image=\"https://miro.medium.com/max/3118/1*iwPLQjyFYRTVeQ2cb4S9rA.png\"\r\n                    title=\"Live from space album cover\"\r\n                />\r\n            </Hidden>\r\n            <div className={classes.card_info}>\r\n                <CardContent className={classes.card_title}>\r\n                    <Typography variant=\"h5\">\r\n                        This Is a Demo Post Card, Here Is Title\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                        Some description about this post here, get this description from reading the cleaned up file which is generated from all markdown files.\r\n                    </Typography>\r\n                </CardContent>\r\n                <CardContent className={classes.card_detail}>\r\n                    <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                        2020-08-26 10:30 AM\r\n                    </Typography>\r\n                    <Typography variant=\"button\" color=\"textSecondary\">\r\n                        ReadMore\r\n                    </Typography>\r\n                </CardContent>\r\n            </div>\r\n        </Card>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container'\r\nimport ArticleCard from './ArticleCard'\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        marginTop: '10vh',\r\n        marginBottom: '10vh',\r\n    },\r\n    card_grid:{\r\n        height: 320,\r\n    }\r\n}));\r\n\r\nexport default function MediaControlCard() {\r\n    const classes = useStyles();\r\n\r\n    const Articles = [];\r\n\r\n    for (let i = 0; i <= 5; i++) {\r\n        Articles.push(\r\n            <Grid item xs={12} md={9} key={i} className={classes.card_grid}>\r\n                <ArticleCard/>\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Container className={classes.root}>\r\n            <Grid\r\n                container\r\n                spacing={0}\r\n                direction=\"row\"\r\n                alignItems=\"center\"\r\n                justify=\"center\"\r\n            >\r\n                {Articles}\r\n\r\n            </Grid>\r\n        </Container>\r\n    );\r\n}\r\n","import React from 'react';\nimport './App.css';\n// import {MuiThemeProvider, createMuiTheme} from \"@material-ui/core/styles\";\nimport {MuiThemeProvider} from \"@material-ui/core/styles\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport {withStyles} from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container'\nimport {unstable_createMuiStrictModeTheme} from '@material-ui/core/styles';\n\n\nimport Navbar from './components/Navbar'\nimport ArticleList from './components/ArticleList'\n\nlet myTheme = unstable_createMuiStrictModeTheme({\n    palette: {\n        type: 'dark'\n    },\n    typography: {\n        fontFamily: [\n            'Roboto',\n            '-apple-system',\n            'BlinkMacSystemFont',\n            '\"Segoe UI\"',\n            '\"Helvetica Neue\"',\n            'Arial',\n            'sans-serif',\n            '\"Apple Color Emoji\"',\n            '\"Segoe UI Emoji\"',\n            '\"Segoe UI Symbol\"',\n        ].join(','),\n    },\n});\n\nconst useStyles = {\n    root: {\n        flexGrow: 1,\n        maxWidth: '100vw',\n        minHeight: 'calc(100vh - 68px)',\n        textAlign: 'center',\n    },\n};\n\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            theme: myTheme,\n        };\n        this.toggleDarkTheme = this.toggleDarkTheme.bind(this)\n    }\n\n    toggleDarkTheme = (event) => {\n        let newPaletteType = this.state.theme.palette.type === \"light\" ? \"dark\" : \"light\";\n        myTheme = unstable_createMuiStrictModeTheme({palette: {type: newPaletteType}});\n        this.setState({theme: myTheme});\n    };\n\n    render() {\n        const {classes} = this.props;\n        return (\n            <MuiThemeProvider theme={myTheme}>\n                <CssBaseline/>\n                <Container className={classes.root}>\n\n                    <div className=\"App\">\n                        <Navbar theme={this.state.theme} onToggleDark={this.toggleDarkTheme}/>\n                        <ArticleList/>\n                    </div>\n\n                </Container>\n            </MuiThemeProvider>\n        );\n    }\n}\n\nexport default withStyles(useStyles)(App);\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}